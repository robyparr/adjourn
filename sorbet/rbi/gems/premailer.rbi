# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/premailer/all/premailer.rbi
#
# premailer-1.12.1

class Premailer
  def append_query_string(doc, qs); end
  def base_dir; end
  def base_url; end
  def check_client_support; end
  def convert_inline_links(doc, base_uri); end
  def doc; end
  def html_file; end
  def initialize(html, options = nil); end
  def is_xhtml?; end
  def load_css_from_html!; end
  def load_css_from_local_file!(path); end
  def load_css_from_options!; end
  def load_css_from_string(css_string); end
  def local_uri?(uri); end
  def media_type_ok?(media_types); end
  def processed_doc; end
  def self.canonicalize(uri); end
  def self.is_media_query?(media_types); end
  def self.local_data?(data); end
  def self.resolve_link(path, base_path); end
  def unmergable_rules; end
  def warnings; end
  include CssParser
  include HtmlToPlainText
  include Premailer::Warnings
end
module Premailer::Adapter
  def self.default; end
  def self.find(adapter); end
  def self.use; end
  def self.use=(new_adapter); end
end
module AdapterHelper
end
module AdapterHelper::RgbToHex
  def ensure_hex(color); end
  def is_rgb?(color); end
  def to_hex(str); end
end
module HtmlToPlainText
  def convert_to_text(html, line_length = nil, from_charset = nil); end
  def word_wrap(txt, line_length); end
end
module Premailer::Warnings
end
